@model Notown.Helpers.PaginatedList<Notown.Models.Musician>

@{
    ViewData["Title"] = "Index";
}

<h2>Musicians</h2>

@if (User.Identity.IsAuthenticated)
{
    <p>
        <a asp-action="Create" style="float:left;">Create New</a>
    </p>
}
<form asp-action="Index" method="get">
    <div class="form-actions no-color" style="float: right;">
        <p>
            Search:
            <input type="text" name="SearchString" value="@ViewData["currentFilter"]" placeholder="Name, Instru, Address" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to List</a>

        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.NameSortParm" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.InstrumentSortParm" asp-route-currentFilter="@ViewData["CurrentFilter"]">Instrument</a>
            </th>
            @if (User.Identity.IsAuthenticated)
            {
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.PlaceSortParm" asp-route-currentFilter="@ViewData["CurrentFilter"]">Address</a>
                </th>
            }
            <th>
                Options
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Instrument.Name)
            </td>
            @if (User.Identity.IsAuthenticated)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Place.Address)
                </td>
            }
            <td>
                @if (User.Identity.IsAuthenticated)
                {
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> <text>|</text>
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> <text>|</text>
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                }
                else
                {
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled btn">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled btn">
    Next
</a>

@Model.PageIndex  <text>of </text> @Model.TotalPages <text> Pages</text>
